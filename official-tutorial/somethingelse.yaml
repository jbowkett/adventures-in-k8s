# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-02-04T14:46:28Z"
  generation: 2
  labels:
    app: examplehttpapp
  name: examplehttpapp
  namespace: default
  resourceVersion: "11971"
  selfLink: /apis/apps/v1/namespaces/default/deployments/examplehttpapp
  uid: d150bbe3-29da-480e-9afb-3e532fde4a30
spec:
  progressDeadlineSeconds: 600
  replicas: 5
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: examplehttpapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: examplehttpapp
    spec:
      containers:
      - image: katacoda/docker-http-server
        imagePullPolicy: Always
        name: docker-http-server
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 5
  conditions:
  - lastTransitionTime: "2020-02-04T14:46:28Z"
    lastUpdateTime: "2020-02-04T14:46:30Z"
    message: ReplicaSet "examplehttpapp-796bd8b875" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2020-02-04T14:57:40Z"
    lastUpdateTime: "2020-02-04T14:57:40Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 5
  replicas: 5
  updatedReplicas: 5
